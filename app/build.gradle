apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk
    defaultConfig {
        applicationId application_id
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_name
        project.ext.set("archivesBaseName", "Tangedco_Admin_v" + defaultConfig.versionName)

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    signingConfigs {
        Properties props
        // Creates a signing configuration called "release".
        release {
            //Parse signing properties file
            props = parseSigningProp('signing.properties')
            if (props != null) {
                // Specifies the path to your keystore file.
                storeFile file(props['STORE_FILE'])
                // Specifies the password for your keystore.
                storePassword props['STORE_PASSWORD']
                // Specifies the identifying name for your key.
                keyAlias props['KEY_ALIAS']
                // Specifies the password for your key.
                keyPassword props['KEY_PASSWORD']


            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
            //  buildConfigField 'com.mslabs.tangetco.StethoHelper', 'STETHO', 'new com.sipcot.stetho.FakeStethoHelper()'

        }

        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            shrinkResources false
            debuggable true
            testCoverageEnabled = true
            //  buildConfigField 'com.mslabs.tangetco.StethoHelper', 'STETHO', 'new com.sipcot.stetho.RealStethoHelper()'

        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "Tangedco_Admin"
            def SEP = "_"
            def version = variant.versionName
            def date = new Date()
            def formattedDate = date.format('dd-MM-yyyy')

            def newApkName = project + SEP + version + SEP + formattedDate + ".apk"

            outputFileName = new File(newApkName)
        }
    }

    //JNI Lib Declaration
    sourceSets.main {
        jniLibs.srcDirs 'src/main/jniLibs'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    testImplementation 'junit:junit:4.13'


    implementation "androidx.appcompat:appcompat-resources:1.1.0"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.material:material:1.3.0-alpha01'


    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    implementation 'com.mohitdev:verticalviewpager:0.0.2'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.daimajia.slider:library:1.1.5'


    //Facebook stetho
    debugImplementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.android:facebook-android-sdk:4.20.0'


    //ROOM DB
    implementation 'androidx.room:room-runtime:2.2.5'
    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    implementation "androidx.room:room-ktx:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"

    //Navigation
    implementation "androidx.navigation:navigation-fragment:2.2.2"
    implementation "androidx.navigation:navigation-ui:2.2.2"
    implementation 'org.jetbrains:annotations:19.0.0'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'

    //CircleImageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'


    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    implementation 'com.github.scottyab:showhidepasswordedittext:0.8'

    implementation 'com.github.bumptech.glide:glide:3.7.0'

    implementation 'com.github.dhaval2404:imagepicker-support:1.7.1'


    implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'

    implementation 'com.github.florent37:inline-activity-result-kotlin:1.0.4'

    implementation 'com.github.scottyab:showhidepasswordedittext:0.8'

    implementation 'com.github.IntruderShanky:Sectioned-RecyclerView:2.1.1'

    implementation "com.hextremelabs.pinpad:pinpad:0.1.0"

    implementation 'com.jaeger.statusbarutil:library:1.4.0'


}

def parseSigningProp(String propPath) {
    Properties props = new Properties()
    def propFile = new File(propPath)
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))

        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            return props

        } else {
            println 'signing.properties found but some entries are missing'
            return null
        }
    } else {
        println 'signing.properties not found'
        return null
    }
}
